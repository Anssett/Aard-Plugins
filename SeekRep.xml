<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE muclient>
<!-- Saved on Thursday, June 06, 2024, 8:25 PM -->
<!-- MuClient version 5.07-pre -->

<!-- Plugin "SeekRep" generated by Plugin Wizard -->

<!--
comments go here
-->

<muclient>
<plugin
   name="SeekRep"
   author="Anssett"
   id="c9e9e568ec2b3bafe4dc76fa"
   language="Lua"
   purpose="To do things with Seek output."
   save_state="y"
   date_written="2024-06-06 20:24:22"
   requires="5.07"
   version="1.0"
   >
<description trim="y">
<![CDATA[
doing some seekery stuff here
]]>
</description>

</plugin>


<!--  Triggers  -->

<triggers>
  <trigger enabled="y" group="seekrep" keep_evaluating="y" script="seekFail" match="^Your fail to seek your target correctly\.$" regexp="y" send_to="12" sequence="100"></trigger>
</triggers>

<!--  Aliases  -->

<aliases>
  <alias match="seekrep (?<name>(.*))" script="startSeek" regexp="y" enabled="y" group="seekrep" send_to="12" sequence="100" ></alias>
  <alias script="OnHelp" match="sr help" enabled="y"></alias>
</aliases>

<script>
<![CDATA[

require "wrapped_captures"
require "aardwolf_colors"
require "tprint"

function disableSeek()
--  EnableTriggerGroup("seekrep",false)
end

function seekFail()
--  disableSeek()
  Note("something broke. Or seek failed and you need to try again.")
end

function initTarget()
targetArray = {
  shortn = "",
  baselev = 0,
  identical = 0,
  timeskilled = 0,
  align = "",
  immunities = "",
  notes = "",
  resists={
    Acid=0,
    Air=0,
    Bash=0,
    Cold=0,
    Disease=0,
    Earth=0,
    Electric=0,
    Energy=0,
    Fire=0,
    Holy=0,
    Light=0,
    Magic=0,
    Mental=0,
    Negative=0,
    Pierce=0,
    Poison=0,
    Shadow=0,
    Slash=0,
    Sonic=0,
    Water=0
  }
}
end

function trim(s)
  return(string.gsub(s, "^%s*(.-)%s*$", "%1"))
end

function resSplit(instring)
  splitResults = {
  }
  split1 = trim(string.sub(instring,0,31))
  split2 = trim(string.sub(instring,31,58))
  if(split1 ~= "") then
    tbl1 = resSubSplit(split1)
    targetArray.resists[tbl1[1]] = tbl1[2]
  end
  if (split2 ~= "") then
    tbl2=resSubSplit(split2)
    targetArray.resists[tbl2[1]] = tbl2[2]
  end
end

function resSubSplit(instring)
  local splitTable = {}
  for str in string.gmatch(instring,"([^:]+)") do
    local tmpstr = string.gsub(str,"%%","")
    table.insert(splitTable,trim(tmpstr))
  end
  return splitTable
end

function table_to_string(tbl)
  local result = "{"
  for k, v in pairs(tbl) do
      -- Check the key type (ignore any numerical keys - assume its an array)
      if type(k) == "string" then
          result = result.."[\""..k.."\"]".."="
      end

      -- Check the value type
      if type(v) == "table" then
          result = result..table_to_string(v)
      elseif type(v) == "boolean" then
          result = result..tostring(v)
      else
          result = result.."\""..v.."\""
      end
      result = result..","
  end
  -- Remove leading commas from the result
  if result ~= "" then
      result = result:sub(1, result:len()-1)
  end
  return result.."}"
end

function OnHelp ()
  world.Note (world.GetPluginInfo (world.GetPluginID (), 3))
end

function startSeek(name,line, args)
  target = args.name
  initTarget()

  command = "seek " .. target
  --startTag = "^Your research into .* reveals the following \\.\\.\\.\\. $"
  startTag = "^\\-+$"
  --endTag = "^You are charged \\d+ gold clan skill fee\\.$"
  endTag = "^\\-+$"
  tagsAreRegex=true
  noCommandEcho=false
  omitResponse=true
  noFollowPrompt=false
  sendViaExecute=true

  Capture.tagged_output(command,startTag,endTag,tagsAreRegex,noCommandEcho,omitResponse,noFollowPrompt,processCapture,sendViaExecute,seekFail)
end

function processCapture(lines)
  new_table = {}

  --remove color data etc
  for k, v in ipairs(lines) do
      stripped = strip_colours_from_styles(v)
      if (stripped ~= "" and 
          stripped ~="------------------------- [ Resistances ] ----------------------") then
          table.insert(new_table, trim(stripped))
      end
  end

  --process de-colored data
  for i,j in ipairs(new_table) do
      --Note("i: " .. i .. " j: " .. j)
      if string.find(j,"Mob Short Name") ~=nil then
        targetArray.shortn = trim(string.match(j, ":(.*)"))
      elseif string.find(j,"Mob Base Level") ~= nil then
        targetArray.baselev = trim(string.match(j, ":(.*)"))
      elseif string.find(j,"Identical Mobs") ~= nil then
        targetArray.identical = trim(string.match(j, ":(.*)"))
      elseif string.find(j,"Times Killed") ~= nil then
        targetArray.timeskilled = trim(string.match(j, ":(.*)"))
      elseif string.find(j,"Alignment") ~= nil then
        targetArray.align = trim(string.match(j, ":(.*)"))
      elseif string.find(j,"Immunities") ~= nil then
        targetArray.immunities = trim(string.match(j, ":(.*)"))
      elseif string.find(j,"Note") ~= nil then
        targetArray.notes = trim(string.match(j, ":(.*)"))
      elseif string.find(j,"%a+%s+:%s+[-%.%d]+") ~= nil then
        resSplit(j)
      end
  end
  
  Note("Seek data on target: "..targetArray.shortn)
  sorted = table.sort(targetArray.resists,function (ab) return a[2]<b[2] end)
  tprint(sorted)
end



]]>
</script> 

</muclient>
